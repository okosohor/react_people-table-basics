{"version":3,"sources":["components/Navigation.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PersonRow.tsx","components/PeopleList.tsx","components/Pages/HomePage.tsx","components/Pages/PageNotFound.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","isActive","cn","to","Loader","API_URL","wait","delay","Promise","resolve","setTimeout","getPeople","then","fetch","response","json","PersonLink","person","slug","sex","name","PersonRow","born","died","motherName","fatherName","mother","father","useParams","personSlug","selected","PeopleList","useState","people","setPeople","loadingError","setLoadingError","isLoaded","setIsLoaded","useEffect","fetchData","loadedPeople","preparedPeople","map","find","person1","emptyData","length","failedFetch","HomePage","PageNotFound","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d6c54968.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"../\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n            to=\"../people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../types';\n\ninterface Props {\n  person: Person | undefined,\n}\n\nexport const PersonLink:React.FC<Props> = ({ person }) => {\n  return (\n    <Link\n      to={`../${person?.slug}`}\n      className={cn({ 'has-text-danger': person?.sex === 'f' })}\n    >\n      {person?.name}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types/Person';\nimport { PersonLink } from './PersonLink';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonRow: React.FC<Props> = ({ person }) => {\n  const {\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    slug,\n  } = person;\n\n  const { personSlug = '0' } = useParams();\n\n  const selected = personSlug === slug;\n\n  return (\n    <tr data-cy=\"person\" className={cn({ 'has-background-warning': selected })}>\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {\n          mother ? (\n            <PersonLink person={person.mother} />\n          ) : (\n            <p>\n              {motherName || '-'}\n            </p>\n          )\n        }\n      </td>\n\n      <td>\n        {\n          father ? (\n            <PersonLink person={person.father} />\n          ) : (\n            <p>\n              {fatherName || '-'}\n            </p>\n          )\n        }\n      </td>\n    </tr>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from './Loader';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PersonRow } from './PersonRow';\n\nexport const PeopleList = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [loadingError, setLoadingError] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const getPreparedPeople = (loadedPeople: Person[]) => {\n    return loadedPeople.map(person => {\n      return {\n        ...person,\n        mother: people\n          .find(person1 => person1.name === person.motherName),\n        father: people\n          .find(person1 => person1.name === person.fatherName),\n      };\n    });\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const loadedPeople = await getPeople();\n\n        setPeople(loadedPeople);\n      } catch (error) {\n        setLoadingError(true);\n      } finally {\n        setIsLoaded(true);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const preparedPeople = getPreparedPeople(people);\n\n  const emptyData = isLoaded && people.length < 1;\n  const failedFetch = loadingError;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {failedFetch && (\n            <p\n              data-cy=\"peopleLoadingError\"\n              className=\"has-text-danger\"\n            >\n              Something went wrong\n            </p>\n          )}\n\n          {emptyData && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            {!isLoaded ? <Loader /> : (\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n            )}\n\n            <tbody>\n              {preparedPeople.map(person => (\n                <PersonRow\n                  key={person.slug}\n                  person={person}\n                />\n              ))}\n\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const HomePage:React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","export const PageNotFound:React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Route, Routes, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { PeopleList } from './components/PeopleList';\nimport { HomePage } from './components/Pages/HomePage';\nimport { PageNotFound } from './components/Pages/PageNotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navigation />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route\n            path=\"/*\"\n            element={<PageNotFound />}\n          />\n\n          <Route path=\"/people\">\n            <Route\n              index\n              element={(\n                <PeopleList />\n              )}\n            />\n\n            <Route\n              path=\":personSlug\"\n              element={(\n                <PeopleList />\n              )}\n            />\n          </Route>\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}